/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package epsi.java.gosecuri;

import com.github.sarxos.webcam.Webcam;
import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author mmf
 */
public class WebCamCapture extends javax.swing.JFrame {

    /**
     * Creates new form WebCamCapture
     */
    public WebCamCapture() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbTakePhoto = new javax.swing.JButton();
        jlDisplayPhoto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Prise de photo");
        setPreferredSize(new java.awt.Dimension(800, 600));

        jbTakePhoto.setText("Prendre photo");
        jbTakePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTakePhotoActionPerformed(evt);
            }
        });

        jlDisplayPhoto.setPreferredSize(new java.awt.Dimension(640, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbTakePhoto)
                .addGap(18, 18, 18)
                .addComponent(jlDisplayPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlDisplayPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbTakePhoto)
                        .addGap(0, 255, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbTakePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTakePhotoActionPerformed
        try {
            connexion = DriverManager.getConnection(URL, USER, MDP);
            String path = savePhotoOnDisk();
            savePhotoInDB(connexion, path);
            displayPersons(connexion);
        } catch (IOException ioex) {
            System.out.println("Erreur enregistrement photo sur disque : ");
            ioex.printStackTrace();
            JOptionPane.showMessageDialog(this, 
                    "Erreur enregistrement photo sur disque : " + ioex.getMessage(), 
                    "Erreur rencontrée", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException sqlex) {
            System.out.println("Erreur BD : ");
            sqlex.printStackTrace();
            JOptionPane.showMessageDialog(this, 
                    "Erreur BD : " + sqlex.getMessage(), 
                    "Erreur rencontrée", JOptionPane.ERROR_MESSAGE);   
        }
        finally {
            closeResources();
        }     
    }//GEN-LAST:event_jbTakePhotoActionPerformed

    private void closeResources() {
        try {
            if (result != null) {
                result.close();
            }
            if (ps != null) {
                ps.close();
            }
            if (connexion != null) {
                connexion.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
        
    private String savePhotoOnDisk() throws IOException {
        Webcam webcam = Webcam.getDefault();
        webcam.setViewSize(new Dimension(640, 480)); // Dimensions capture
        webcam.open();
        String fic = PHOTO_PATH + "photo_" + new Date().getTime() + ".png";
        ImageIO.write(webcam.getImage(), "PNG", new File(fic));
        webcam.close();
        jlDisplayPhoto.setIcon(new javax.swing.ImageIcon(fic));
        return fic;
    }
    
    private void savePhotoInDB(Connection connexion, String path) throws SQLException {
        // récupération de la fiche visiteur si existante
        ps = connexion.prepareStatement("insert into personne(photo) values(?)");
        ps.setString(1, path);
        ps.executeUpdate();
        ps.close();
    }
    
    private void displayPersons(Connection connexion) throws SQLException {
        // récupération de la fiche visiteur si existante
        System.out.println("*****************************");
        System.out.println("Liste des personnes en DB : ");
        ps = connexion.prepareStatement("select * from personne");
        result = ps.executeQuery();
        while (result.next()) {
            int id = result.getInt("id");
            String photo = result.getString("photo");
            System.out.println("Personne : " + id + ", photo : " + photo);
        }
        result.close();
        ps.close();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WebCamCapture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WebCamCapture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WebCamCapture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WebCamCapture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WebCamCapture().setVisible(true);
            }
        });
    }
    
    private final String URL = "jdbc:mysql://mysql-gosecurii.alwaysdata.net/gosecurii_gosecuri";
    private final String USER = "gosecurii";
    private final String MDP = "Epsi@2019";
    private final String PHOTO_PATH = "c:/images/";
    private Connection connexion = null;
    private PreparedStatement ps = null;
    private ResultSet result = null;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbTakePhoto;
    private javax.swing.JLabel jlDisplayPhoto;
    // End of variables declaration//GEN-END:variables
}
